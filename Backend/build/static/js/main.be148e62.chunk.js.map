{"version":3,"sources":["logo.svg","stores/UserStore.js","components/Welcome/Welcome.js","components/Home/Home.js","components/Login/Login.js","components/Signup/Signup.js","components/FindGame/FindGameAsGuest/FindGameAsGuest.js","components/Profile/Profile.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","extendObservable","this","loading","isloggedIn","username","Welcome","className","id","href","Component","Home","Login","state","password","redirect","register","handleLogin","login","bind","onChange","handleRegister","resultUsernameCheck","alphaNumCheck","document","getElementById","value","resultPasswordCheck","console","log","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","e","target","name","entry","match","to","type","placeholder","handleChange","onClick","doLogin","Signup","fields","errors","redirectToReferrer","formIsValid","validateForm","win","lose","style","fontSize","color","doRegister","FindGameAsGuest","Profile","props","profilePictureRef","React","createRef","Stats","logout","doLogout","map","index","Rank","GamesCount","AccountDate","Object","keys","key","toUpperCase","src","alt","renderTableHeader","renderTableData","Routes","exact","path","component","pate","App","appName","home","data-off-canvas-wrapper","data-off-canvas-content","logo","rel","observer","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.be148e62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { extendObservable } from 'mobx';\n\n/**\n*UserStore\n*/\nclass UserStore {\n  constructor() {\n    extendObservable(this,{\n      loading:true,\n      isloggedIn: false,\n      username: ''\n    })\n  }\n}\n\nexport default new UserStore();\n","import React, {Component} from 'react';\nimport './Welcome.css';\nimport { Redirect } from 'react-router-dom'\n\n\nclass Welcome extends Component {\n\n  /*constructor(){\n    super();\n\n    this.state = {\n      login: false,\n      findGameAsGuest: false\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleFGG = this.handleFGG.bind(this);\n  }\nhandleLogin() {\n    this.setState({login: true});\n}\nhandleFGG() {\n  this.setState({findGameAsGuest: true});\n}*/\n\nrender() {\n  /*if (this.state.login){\n    return (<Redirect to={'/login'}/>)\n  }\n  if (this.state.findGameAsGuest){\n    return (<Redirect to={'/findGameAsGuest'}/>)\n  }*/\n\n    return (\n      <div className=\"row\">\n        <div className=\"medium-12 columns\">\n          <h2 id=\"welcomeText\">Go Game</h2>\n          <a href=\"/login\" className=\"niceButton\">Login/Register</a><br></br><br></br>\n          <a href=\"/findGameAsGuest\" className=\"niceButton\">Find Game As Guest</a><br></br><br></br>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Welcome;\n","import React, {Component} from 'react';\nimport './Home.css';\n\nclass Home extends Component {\n    render(){\n      return(\n        <div className=\"row\" id=\"Body\">\n        <div className=\"medium-12 columns\">\n        <h2>Home</h2>\n        </div>\n        </div>\n      );\n    }\n}\nexport default Home;\n","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport UserStore from '../../stores/UserStore';\nimport './Login.css';\nimport '../../App.css';\n\nclass Login extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n     username: '',\n     password: '',\n     redirect: false,\n     register: false\n    };\n\n    this.handleLogin = this.login.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleRegister = this.register.bind(this);\n  }\n\n\n  login() {\n    var resultUsernameCheck = this.alphaNumCheck(document.getElementById(\"username\").value);\n    var resultPasswordCheck = this.alphaNumCheck(document.getElementById(\"password\").value);\n    console.log(resultUsernameCheck);\n    if(resultUsernameCheck && resultPasswordCheck){\n      this.setState({redirect: true});\n    }\n  }\n\n  resetForm(){\n    this.setState({\n      username: '',\n      password: '',\n      redirect: false,\n      register: false\n    })\n  }\n\n  async doLogin(){\n    if(!document.getElementById(\"username\").value){\n      return;\n    }\n    if(!document.getElementById(\"password\").value){\n      return;\n    }\n    try{\n      let res = await fetch('/login/isLogin', {\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: document.getElementById(\"username\").value,\n          password: document.getElementById(\"password\").value\n        })\n      });\n      let result = await res.json();\n      if(result && result.success){\n        UserStore.isloggedIn = true;\n        UserStore.username = result.username;\n        this.setState({redirect: true});\n      }\n      else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    }\n    catch(e){\n      console.log();\n      this.resetForm();\n    }\n  }\n\n  register() {\n    this.setState({register: true});\n  }\n\n  onChange(e){\n    this.setState({[e.target.name]:e.target.value});\n  }\n\n  alphaNumCheck(entry) {\n      let regex = /^[a-z0-9]+$/i;\n      if (entry != null && entry.match(regex)) {\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  render() {\n    if (this.state.redirect){\n      return (<Redirect to={'/profile'}/>)\n    }\n    if(this.state.register){\n      return (<Redirect to={'/signup'}/>)\n    }\n\n     return (\n       <div className=\"row\" id=\"Body\">\n           <div className=\"medium-5 columns left\">\n           <h4>Login</h4>\n             <label>Username</label><br></br>\n             <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Username\" onChange={this.handleChange}/><br></br><br></br>\n             <label>Password</label><br></br>\n             <input type=\"password\" id=\"password\" name=\"password\"  placeholder=\"Password\" onChange={this.handleChange}/><br></br><br></br>\n             <input type=\"submit\" className=\"button\" value=\"Submit\" onClick={() => this.doLogin()}/>\n             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <input type=\"button\" value=\"Register\" onClick={this.handleRegister}/>\n\n           </div>\n         </div>\n\n    );\n  }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport './Signup.css';\n\nclass Signup extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      fields: {},\n      errors: {},\n     redirectToReferrer: false\n   }\n     this.handleChange = this.handleChange.bind(this);\n  };\n\n  handleChange(e) {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n          fields\n        });\n      }\n\n  validateForm() {\n\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n      if (!fields[\"username\"]) {\n      formIsValid = false;\n      errors[\"username\"] = \"*Please enter your username.\";\n      }\n\n      if (typeof fields[\"username\"] !== \"undefined\") {\n        if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n          formIsValid = false;\n          errors[\"username\"] = \"*Please enter alphabet characters only.\";\n        }\n      }\n\n        if (!fields[\"password\"]) {\n        formIsValid = false;\n        errors[\"password\"] = \"*Please enter your password.\";\n      }\n\n      if (typeof fields[\"password\"] !== \"undefined\") {\n        if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n          formIsValid = false;\n          errors[\"password\"] = \"*Please enter secure and strong password.\\n\\\n          At least 8 characters,\\n 1 special symbol from @#$%&,\\n 1 capital letter, 1 small letter, 1 number\";\n        }\n      }\n\n        this.setState({\n          errors: errors\n        });\n        return formIsValid;\n      }\n\n      resetForm(){\n        let fields = {};\n        fields[\"username\"] = \"\";\n        fields[\"password\"] = \"\";\n        this.setState({fields:fields});\n      }\n\n      async doRegister(){\n        if(!this.state.fields[\"username\"]){\n          return;\n        }\n        if(!this.state.fields[\"password\"]){\n          return;\n        }\n        try{\n          if (this.validateForm()) {\n          let res = await fetch('/signup/registered', {\n            method: 'post',\n            headers:{\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              username: this.state.fields[\"username\"],\n              password: this.state.fields[\"password\"],\n              win: 0,\n              lose: 0\n            })\n          });\n          //let result = JSON.parse(JSON.stringify(res));\n          let result = await res.json();\n          if(result && result.success){\n            this.resetForm();\n            alert(\"Successfully registered\");\n          }\n          else if (result && result.success === false) {\n            this.resetForm();\n            alert(result.msg);\n          }\n        }\n      }\n        catch(e){\n          this.resetForm();\n        }\n      }\n\n  render() {\n\n     return (\n      <div className=\"row\" id=\"main-registration-container\">\n        <div className=\"medium-5 columns left\" id=\"register\">\n        <h4>Registration</h4>\n\n        <label>Username </label>\n        <input type=\"text\" name=\"username\" placeholder=\"username\" value={this.state.fields.username} onChange={this.handleChange}/><br></br>\n        <div style={{ fontSize: 12, color: \"red\" }} className=\"errorMsg\">{this.state.errors.username}</div>\n        <label>Password </label>\n        <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.fields.password} onChange={this.handleChange}/><br></br>\n        <div style={{ fontSize: 12, color: \"red\" }} className=\"errorMsg\">{this.state.errors.password}</div>\n        <input type=\"submit\" className=\"button\" value=\"Register\" onClick= {() => this.doRegister()}/><br></br>\n\n        <a style={{ fontSize: 12}} href=\"/\" className=\"button\">Home</a><br></br>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, {Component} from 'react';\nimport './FindGameAsGuest.css';\n\nclass FindGameAsGuest extends Component {\nrender() {\nreturn (\n<div className=\"row\">\n<div className=\"medium-12 columns\">\n<h2 id=\"findGameAsGuestText\">Find Game As Guest</h2>\n\n\n\n</div>\n</div>\n);\n}\n}\nexport default FindGameAsGuest;\n","\n//Alec Meyer Profile\nimport React, {Component} from 'react';\nimport './Profile.css';\nimport Login from '../Login/Login.js'\nimport { Redirect } from 'react-router-dom'\nimport ReactDOM from \"react-dom\";\nimport UserStore from '../../stores/UserStore';\n\nclass Profile extends Component {\n\tconstructor(props) {\n        super(props);\n\t\tthis.profilePictureRef = React.createRef();\n\n\t\tthis.state = {\n\t\t\t\tStats: [\n\t\t\t\t  {\n\t\t\t\t\t\t\"Rank\": 2,\n\t\t\t\t\t\t\"GamesCount\": 203,\n\t\t\t\t\t\t\"AccountDate\": 2008,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tlogout: false\n\t\t\t};\n\t\t\tthis.doLogout = this.doLogout.bind(this);\n\t\t}\n\n\n\t renderTableData() {\n      return this.state.Stats.map((Stats, index) => {\n         const {Rank, GamesCount, AccountDate} = Stats\n         return (\n\n            <tr>\n               <td>{Rank}</td>\n               <td>{GamesCount}</td>\n               <td>{AccountDate}</td>\n            </tr>\n         )\n      })\n   }\n\n   renderTableHeader() {\n      let header = Object.keys(this.state.Stats[0])\n      return header.map((key, index) => {\n         return <th key={index}>{key.toUpperCase()}</th>\n      })\n   }\n\n\t doLogout(){\n\t \tthis.setState({logout: true});\n\t }\n\nrender() {\n  const { redirect } = this.setState;\n\n\tif (this.state.logout){\n\t\treturn (<Redirect to={'/login'}/>)\n\t}\n\nreturn (\n\t<div className=\"row\">\n\t\t<div className=\"medium-12 columns\">\n\t\t\t<h2 id=\"welcomeText\">Profile: {UserStore.username}</h2>\n\t\t\t<img src=\"pfp.png\" alt=\"PFP place holder\"></img>\n\t\t\t<table id='Stats'>\n\t\t\t   <tbody>\n\t\t\t   <tr>{this.renderTableHeader()}</tr>\n\t\t\t\t  {this.renderTableData()}\n\t\t\t   </tbody>\n\t\t\t</table>\n\t\t\t<input type=\"submit\" className=\"button\" value=\"logout\" onClick={this.doLogout}/>\n\t\t</div>\n\t</div>\n);\n}\n\n\n}\nexport default Profile;\n","import React from 'react';\nimport {BrowserRouter,  Route, Switch} from 'react-router-dom';\n\nimport Welcome from '././components/Welcome/Welcome';\nimport Home from '././components/Home/Home';\nimport Login from '././components/Login/Login';\nimport Signup from '././components/Signup/Signup';\nimport FindGameAsGuest from '././components/FindGame/FindGameAsGuest/FindGameAsGuest';\nimport Profile from '././components/Profile/Profile';\n\nconst Routes = () => (\n  <BrowserRouter >\n      <Switch>\n          <Route exact path=\"/\" component={Welcome}/>\n          <Route path=\"/home\" component={Home}/>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/signup\" component={Signup}/>\n          <Route path=\"/findGameAsGuest\" component={FindGameAsGuest}/>\n          <Route pate=\"/profile\" component={Profile}/>\n      </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport {Component} from 'react';\nimport {observer} from 'mobx-react';\nimport logo from './logo.svg';\nimport UserStore from './stores/UserStore';\nimport './App.css';\nimport { Redirect } from 'react-router-dom'\nimport Routes from './routes'\nimport Signup from './components/Signup/Signup'\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state={\n      appName: \"GO Game\",\n      home:false\n    }\n  }\n\n  async componentDidMount(){\n    try{\n      let res = await fetch('/login/isloggedIn', {\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n      if(result && result.success){\n        UserStore.loading = false;\n        UserStore.isloggedIn =  true;\n        UserStore.username = result.username;\n      }\n      else{\n        UserStore.loading = false;\n        UserStore.isloggedIn = false;\n      }\n    }\n    catch(e){\n      UserStore.loading = false;\n      UserStore.isloggedIn = false;\n    }\n  }\n\n    // async doLogout(){\n    //   try{\n    //     let res = await fetch('/login/logout', {\n    //       method: 'post',\n    //       headers:{\n    //         'Accept': 'application/json',\n    //         'Content-Type': 'application/json'\n    //       }\n    //     });\n    //     let result = await res.json();\n    //     if(result && result.success){\n    //       UserStore.isloggedIn = false;\n    //       UserStore.username = '';\n    //     }\n    //   }\n    //   catch(e){\n    //     console.log(e);\n    //   }\n    // }\n\n  render() {\n    return (\n      <div className=\"off-canvas-wrapper\">\n      <div className=\"off-canvas-wrapper-inner\" data-off-canvas-wrapper>\n      <div className=\"off-canvas-content\" data-off-canvas-content>\n      <div className=\"App\">\n\n            <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <Routes name={this.state.appName}/>\n\n\n              <br></br><a\n                className=\"myButton\"\n                href=\"https://en.wikipedia.org/wiki/Go_(game)\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Read About GO\n              </a>\n            </header>\n          </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}